<!DOCTYPE html>
<html lang="en-US">
<head>
    <meta charset="utf-8">
    <title>Emission List</title>
    <meta name="viewport" content="initial-scale=1,maximum-scale=1,user-scalable=no">
    <link href="https://api.mapbox.com/mapbox-gl-js/v2.5.0/mapbox-gl.css" rel="stylesheet">
    <script src="https://api.mapbox.com/mapbox-gl-js/v2.5.0/mapbox-gl.js"></script>
    <style>
        body {
            margin: 0;
            padding: 0;
        }

        #container {
            display: flex;
            height: 100vh;
            flex-direction: row;
            align-items: stretch;
        }

        #side-panel {
            flex-basis: 500px;
            overflow-y: scroll;
        }

        #map {
            flex-grow: 1;
        }

        button {
            margin-bottom: 10px;
        }

        table {
            border-collapse: collapse;
            border-spacing: 0;
            width: 100%;
            border: 1px solid #ddd;
        }

        th,
        td {
            text-align: left;
            padding: 16px;
        }

        tr:nth-child(even) {
            background-color: #f2f2f2;
        }
    </style>
</head>
<body>
    <main id="container">
        <div id="side-panel">
            <h2>Emission List</h2>
            <button onclick="populateTable()">Show Emission Data</button>
    
            <table id="emission-table">
                <tr>
                    <th>Country</th>
                    <th>Total Greenhouse Gase</th>
                    <th>Emissions in 2019</th>
                </tr>
            </table>
        </div>
        <div id="map"></div>
    </main>
    <script>
        mapboxgl.accessToken = 'pk.eyJ1IjoiamFrb2J6aGFvIiwiYSI6ImNpcms2YWsyMzAwMmtmbG5icTFxZ3ZkdncifQ.P9MBej1xacybKcDN_jehvw';

        let map = new mapboxgl.Map({
            container: 'map', // container ID
            style: 'mapbox://styles/mapbox/satellite-v9', // style URL
            zoom: 1, // starting zoom
            center: [0, 0] // starting center
        });

        let emissionData;  // Declare emissionData

        async function geojsonFetch() {
            let response = await fetch('assets/emission.geojson');
            emissionData = await response.json();
            // Add more data loading if needed
        }

        function populateTable() {
            let table = document.getElementById("emission-table");
            // Clear existing rows from the table
            table.innerHTML = "";

            // Add header row
            let headerRow = table.insertRow(0);
            let headers = ["Country", "Total Greenhouse Gas", "Emissions in 2019"];
            for (let i = 0; i < headers.length; i++) {
                let headerCell = headerRow.insertCell(i);
                headerCell.innerHTML = headers[i];
            }

            // Add data rows
            for (let i = 0; i < emissionData.features.length; i++) {
                let row = table.insertRow(i + 1);
                let properties = emissionData.features[i].properties;

                // Assuming the structure of your GeoJSON properties
                let country = properties.Name;
                let totalGreenhouseGas = properties.TotalGHG;
                let emissions2019 = properties.Emis2019;

                let cell1 = row.insertCell(0);
                let cell2 = row.insertCell(1);
                let cell3 = row.insertCell(2);

                cell1.innerHTML = country;
                cell2.innerHTML = totalGreenhouseGas;
                cell3.innerHTML = emissions2019;
            }
        }

        geojsonFetch();

    </script>
</body>
</html>
